#!/bin/bash

echo "RUNNING AS $(whoami)"
echo $(env)

if [[ -z "$DISPLAY" ]]; then
  echo "Error: DISPLAY environment variable is not set. Cannot run graphical applications."
  exit 1
fi

graceful_shutdown() {
  echo "Received SIGTERM. Cleaning up..."
  pkill -9 $stardew_valley_pid

  echo "Killed Stardew Valley process, exiting..."
  exit 0
}
trap graceful_shutdown SIGTERM

tail_smapi() {
  local smapi_logs="/config/.config/StardewValley/ErrorLogs/SMAPI-latest.txt"

  while [[ ! -f "$smapi_logs" ]] || [[ -z $(cat $smapi_logs) ]]; do
    echo "SMAPI logs are not yet here. waiting 3 seconds..."
    sleep 3s
  done

  tail -f $smapi_logs
}

# Function to launch Stardew Valley
launch_stardew() {
  sleep 3s
  mangohud /data/stardewvalley/StardewValley
}

if [[ ! -d /config/modconfs/autoload ]]; then
    echo "Creating Directory: autoload"
    mkdir -p /config/modconfs/autoload
fi

if [[ ! -d /config/modconfs/always_on_server ]]; then
    echo "Creating Directory: always_on_server"
    mkdir -p /config/modconfs/always_on_server
fi

if [[ ! -d /config/.config/MangoHud ]]; then
    mkdir -p /config/.config/MangoHud
fi

if [[ ! -f /config/modconfs/autoload/config.json ]]; then
    echo "Moving config: autoload"
    mv /tmp/autoload_config.json /config/modconfs/autoload/config.json
fi

if [[ ! -f /config/modconfs/always_on_server/config.json ]]; then
    echo "Moving config: always on server"
    mv /tmp/always_on_server_config.json /config/modconfs/always_on_server/config.json
fi

if [[ ! -f /config/.config/MangoHud/MangoHud.conf ]]; then
    mv /tmp/MangoHud.conf /config/.config/MangoHud/MangoHud.conf
fi

ln -sv /config/modconfs/autoload/config.json /data/stardewvalley/Mods/AutoLoadGame/config.json
ln -sv /config/modconfs/always_on_server/config.json /data/stardewvalley/Mods/Always\ On\ Server/config.json

echo "Starting..."
echo "Starting to follow the SMAPI logs..."
tail_smapi &

echo "Launching Stardew Valley..."
launch_stardew &
